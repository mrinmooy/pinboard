template <class T>
class Queue {
   Node<T> *head, *tail;
   int size = 0;
public:
   Queue() : head(nullptr), tail(nullptr) {}
   void push(T val) {
      Node<T> *nn = new Node<T>(val);
      if(head==nullptr and tail==nullptr) {
         head = nn;
         tail = nn;
      } else {
         tail->next = nn;
         tail = nn;
      }
      size += 1;
   }
   T peek() {
      return (head->val);
   }
   void pop() {
      if(size==0) return;
      Node<T> *temp = head;
      if(head!=nullptr) {
         head = head->next;
         if(size==1) tail = nullptr;
         delete temp;
         size -= 1;
      }
   }
   int getSize() {
      return size;
   }
   void display() {
      Node<T> *curr = head;
      while(curr!=nullptr) {
         cout<<curr->val<<" ";
         curr = curr->next;
      }
      cout<<"\n";
   }
};